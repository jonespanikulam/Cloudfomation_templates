AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Section 3 Activity template. 
  It launches a VPC with public and private subnets, 
  a web server EC2 instance in the public subnet 
  and a security group attached to this EC2 instance.

Parameters:    
    WebServerInstanceClass:
        Type: String
        AllowedValues:
          -  t2.micro
          -  t2.nano
          -  t2.small
        Description: 'The alllowed values of instance type are:'
    WebserverImageID:
        Type: String
        Default: ami-0fad7378adf284ce0
        Description: 'The image id of instance:'
    VolumeSizeClass:
        Type: Number
        MinValue: 20
        MaxValue: 30
        Default: 20
        Description: The allowed ebs range should be in between 20 and 30
    CidrBlockClass:
        Type: CommaDelimitedList
        Description: 'Subnet are in the order: <vpc-subnet>,<Private-Subnet>,<Public-Subnet>'
    
    # pseudo parameters are also available for keypairds and availability zones--------------imp
    
    KeyPairName:
        Type: AWS::EC2::KeyPair::KeyName
        Description: 'KeyPair name:'
                
    SubnetIdClass:
        Type: AWS::EC2::Subnet::Id
        Description: 'subnet id available:'
    AvailabilityZoneClass:
        Type: AWS::EC2::AvailabilityZone::Name
        Description: 'AvailabilityZone available'
        
        

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Description: Section 3 activity VPC
    Properties:
      CidrBlock: !Select [ 0, !Ref CidrBlockClass]
      #172.31.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        -
          Key: Name
          Value: !Sub '${AWS::StackName}-vpc'

  # Subnets ---        
  PublicSubnet:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneClass
      CidrBlock: !Select [ 2, !Ref CidrBlockClass]
      #10.0.0.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Public Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet 
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneClass
      CidrBlock: !Select [ 1 , !Ref CidrBlockClass ]
      #10.0.1.0/24
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Private Subnet

  # Route tables ---
  PublicRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Public Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref Vpc
      Tags:
        -
          Key: Name
          Value: Private Route Table

  # Internet route for the public route table ---
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  InternetRoute:
    Type: AWS::EC2::Route 
    DependsOn:
      - VpcGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  # Subnet - Route table associations ---    
  PublicSubnetRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateSubnetRouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  # Web server and security group ---
  WebServerInstance:
    Type: AWS::EC2::Instance 
    DependsOn:
      - InternetRoute
      - PublicSubnetRouteTableAssoc
    Properties:
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet 
      ImageId: ami-0fad7378adf284ce0
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      BlockDeviceMappings:
        - 
          DeviceName: /dev/sdf
          Ebs:
            VolumeSize: !Ref VolumeSizeClass
            VolumeType: gp2
      Tags:
        -
          Key: Name
          Value: Web Server
          
          
          

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties:
      GroupDescription: Activity security group 
      VpcId: !Ref Vpc
      SecurityGroupIngress:
              
        # HTTP rule
        -
          CidrIp: 0.0.0.0/0 
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80

        # SSH rule
        -
          CidrIp: 0.0.0.0/0 
          IpProtocol: tcp
          FromPort: 22 
          ToPort: 22


